-- Auto Updater from https://github.com/hexarobi/stand-lua-auto-updater
local status, auto_updater = pcall(require, "auto-updater")
if not status then
    local auto_update_complete = nil util.toast("Installing auto-updater...", TOAST_ALL)
    async_http.init("raw.githubusercontent.com", "/hexarobi/stand-lua-auto-updater/main/auto-updater.lua",
        function(result, headers, status_code)
            local function parse_auto_update_result(result, headers, status_code)
                local error_prefix = "Error downloading auto-updater: "
                if status_code ~= 200 then util.toast(error_prefix..status_code, TOAST_ALL) return false end
                if not result or result == "" then util.toast(error_prefix.."Found empty file.", TOAST_ALL) return false end
                filesystem.mkdir(filesystem.scripts_dir() .. "lib")
                local file = io.open(filesystem.scripts_dir() .. "lib\\auto-updater.lua", "wb")
                if file == nil then util.toast(error_prefix.."Could not open file for writing.", TOAST_ALL) return false end
                file:write(result) file:close() util.toast("Successfully installed auto-updater lib", TOAST_ALL) return true
            end
            auto_update_complete = parse_auto_update_result(result, headers, status_code)
        end, function() util.toast("Error downloading auto-updater lib. Update failed to download.", TOAST_ALL) end)
    async_http.dispatch() local i = 1 while (auto_update_complete == nil and i < 40) do util.yield(250) i = i + 1 end
    if auto_update_complete == nil then error("Error downloading auto-updater lib. HTTP Request timeout") end
    auto_updater = require("auto-updater")
end
if auto_updater == true then error("Invalid auto-updater lib. Please delete your Stand/Lua Scripts/lib/auto-updater.lua and try again") end
auto_updater.run_auto_update({
    check_interval= 1,
    source_url="https://raw.githubusercontent.com/Polizei321/network-tools/main/NetworkTools",
    script_relpath=SCRIPT_RELPATH,
    verify_file_begins_with="--"
})
local start_time = util.current_time_millis()

local change = menu.list(menu.my_root(), "Changelog")
local meanings = menu.list(menu.my_root(), "Symbols")
local experiments = menu.list(menu.my_root(), "Experiments")
local plugins = menu.list(menu.my_root(), "Plugins")
local heist = menu.list(menu.my_root(), "Heists Utilities")
local fmoney = menu.list(menu.my_root(), "Freemode Money")
function SET_INT_GLOBAL(global, value)
    memory.write_int(memory.script_global(global), value)
end
function ADD_MP_INDEX(stat)
    if not IS_MPPLY_STAT(stat) then
        stat = "MP" .. util.get_char_slot() .. "_" .. stat
    end
    return stat
end
function STAT_SET_INT(stat, value)
    STATS.STAT_SET_INT(util.joaat(ADD_MP_INDEX(stat)), value, true)
end
function SET_INT_LOCAL(script, script_local, value)
    if memory.script_local(script, script_local) ~= 0 then
        memory.write_int(memory.script_local(script, script_local), value)
    end
end
util.keep_running()
util.toast("Welcome to the Network Menu. Version 1.8")
util.log("Welcome to the Network Menu.")
menu.toggle_loop(
    menu.my_root(),
    "Remote Ban",
    {"remoteban"},
    "Will send continuous remote kicks, this causes a soft ban for your target leaving them unable to stay in a public lobby.",
    function(a)
        menu.trigger_command(menu.ref_by_path("Online>Player History>TARGET_NAME_HERE [Public]>Blind-Fire Kick>Breakup"))
        util.yield(500)
    end,
    true
)
menu.action(
    menu.my_root(),
    "Remote Ban Test",
    {"remotebantest"},
    "Will send a single remote kick.",
    function()
        menu.trigger_command(menu.ref_by_path("Online>Player History>TTARGET_NAME_HERE [Public]>Blind-Fire Kick>Breakup"))
        util.log("[NETWORK TOOLS] Sending a manual remote kick.")
        util.toast("[NETWORK TOOLS] Sending a manual remote kick.")
    end,
    true
)
menu.action(
    menu.my_root(),
    "Lock Server Down",
    {"lockserver"},
    "Will lock the session you are in making it impossible for adversaries to join. (Use this to block retalitory kicks / block any stalkers from joining.)",
    function()
        menu.trigger_command(menu.ref_by_path("Online>Session>Block Joins>From Non-Whitelisted"))
        menu.trigger_command(menu.ref_by_path("Online>Spoofing>Session Spoofing>Hide Session>Non-Existent Session"))
        menu.trigger_command(menu.ref_by_path("Online>Spoofing>Session Spoofing>Session Type>Invalid"))
        menu.trigger_command(menu.ref_by_path("Online>Reactions>RID Join Reactions>Block"))
        menu.trigger_commands("spoofhost on")
        menu.trigger_commands("spoofedhostname invalid")
        util.yield(1000)
        util.toast("[NETWORK TOOLS] Successfully locked the server.")
        util.log("[NETWORK TOOLS] Server has been locked.")
    end,
    true
)
menu.action(
    menu.my_root(),
    "Unlock Server",
    {"unlockserver"},
    "Will unlock the server.",
    function()
        menu.trigger_command(menu.ref_by_path("Online>Session>Block Joins>From Non-Whitelisted"))
        menu.trigger_command(menu.ref_by_path("Online>Spoofing>Session Spoofing>Hide Session>Disabled"))
        menu.trigger_command(menu.ref_by_path("Online>Spoofing>Session Spoofing>Session Type>Not Spoofed"))
        menu.trigger_command(menu.ref_by_path("Online>Reactions>RID Join Reactions>Block"))
        menu.trigger_commands("spoofhost off")
        util.yield(1000)
        util.toast("[NETWORK TOOLS] Successfully unlocked the server.")
        util.log("[NETWORK TOOLS] Server has been unlocked.")
    end,
    true
)
menu.action(
    menu.my_root(),
    "Panic Button",
    {"pb"},
    "Will activate Panic Mode. (Use this to discard all network traffic to and from you, and protect against bad objects / excessive objects from being spawned.)",
    function()
        util.toast("Panic Button Pressed!")
        util.log("Panic Button Was Pressed!")
        util.yield()
        util.toast("[WARN] Wait until the cycle is completed before pressing again.")
        util.yield(1000)
        util.toast("[WARN] Wait until the cycle is completed before pressing again.")
        util.yield(1000)
        util.toast("[WARN] Wait until the cycle is completed before pressing again.")
        menu.trigger_commands("clearproximity 100")
        util.yield(100)
        menu.trigger_commands("noblame")
        menu.trigger_commands("anticrash")
        menu.trigger_commands("desyncall")
        menu.trigger_commands("norender")
        menu.trigger_commands("infopeds")
        menu.trigger_commands("infovehicles")
        menu.trigger_commands("infopickups")
        menu.trigger_commands("infoobjects")
        menu.trigger_commands("cleararea")
        util.log("Panic Button Ran Successfully.")
        util.toast("[NETWORK TOOLS] Cycle completed.")
    end,
    true
)
menu.action(change, "[1.2]Removed Break Lobby", {""}, "", function()
end, true)
menu.action(change, "[1.3]Updated Panic Button", {""}, "", function()
end, true)
menu.action(change, "[1.4] Added Experiments section", {""}, "", function()
end, true)
menu.action(change, "[1.5] Added Plugin Support", {""}, "", function()
end, true)
menu.action(change, "[1.6] Added 5M+ Special Cargo", {""}, "", function()
end, true)
menu.action(change, "[1.7] Added Instant Finish Cayo/Casino", {""}, "", function()
end, true)
menu.action(plugins, "[Plugin] Crash", {"nmc"}, "Will start the Crash plugin.", function()
    menu.trigger_commands("luanmcm")
    util.toast("Plugin Loaded.")
    end, true)
    menu.action(plugins, "[Plugin] Troll Spam", {"nmt"}, "Will start the Troll Spam plugin.", function()
        menu.trigger_commands("luanmts")
        util.toast("Plugin Loaded.")
        end, true)
        menu.action(plugins, "[Plugin] Toast joining player's level on join", {"nml"}, "Will start the Toast joining player's level on join plugin.", function()
            menu.trigger_commands("luanmtl")
            util.toast("Plugin Loaded.")
            end, true)
menu.action(experiments, "[B] Check for Update", {}, "This button is broken as of now, please give me time to figure out how to fix this.", function()
    util.toast("[WARN] This does NOT work. But I will attempt it anyways for you :)")
    util.yield(1000)
    auto_update_config.check_interval = 0
    util.toast("Checking for updates")
    auto_updater.run_auto_update(auto_update_config)
end)
menu.action(fmoney, "[!] 5M+ Cargo Sell", {"5mc"}, "Will set Special Cargo sell price for 5M+ (Use once, if you wish to unapply this just swap lobbies).", function()
    SET_INT_GLOBAL(262145, 20000000)
    SET_INT_GLOBAL(278133,5780000)
    SET_INT_GLOBAL(278131,5780000)
    SET_INT_GLOBAL(278135,5780000)
    SET_INT_GLOBAL(278129,5780000)
    SET_INT_GLOBAL(278127,5780000)
    SET_INT_GLOBAL(278137,5780000)
    SET_INT_GLOBAL(277933,5791000)
    SET_INT_GLOBAL(277934,2895500)
    SET_INT_GLOBAL(277935,1930333)
    SET_INT_GLOBAL(277936,1158200)
    SET_INT_GLOBAL(277937,827285)
    SET_INT_GLOBAL(277938,643444)
    SET_INT_GLOBAL(277939,413642)
    SET_INT_GLOBAL(277940,304789)
    SET_INT_GLOBAL(277941,241291)
    SET_INT_GLOBAL(277942,199689)
    SET_INT_GLOBAL(277943,170323)
    SET_INT_GLOBAL(277944,148487)
    SET_INT_GLOBAL(277945,131613)
    SET_INT_GLOBAL(277946,118183)
    SET_INT_GLOBAL(277947,98152)
    SET_INT_GLOBAL(277948,83927)
    SET_INT_GLOBAL(277949,73303)
    SET_INT_GLOBAL(277950,65067)
    SET_INT_GLOBAL(277951,58494)
    SET_INT_GLOBAL(277952,52645)
    SET_INT_GLOBAL(277953,52171)
    end, true)
    menu.action(heist, "[?] Instant finish Casino", {"instacasino"}, "Will instantly finish the Casino Heist.", function()
        menu.trigger_commands("scripthost")
        util.yield_once()
        SET_INT_LOCAL("fm_mission_controller", 19707 + 1741, 151)
        SET_INT_LOCAL("fm_mission_controller", 19707 + 2686, 10000000)
        SET_INT_LOCAL("fm_mission_controller", 27471 + 859, 99999)
        SET_INT_LOCAL("fm_mission_controller", 31585 + 69, 99999)
        SET_INT_LOCAL("fm_mission_controller", 31585 + 97, 79)
    end)
    menu.action(heist, "[?] Instant finish Cayo", {"instacayo"}, "Will instantly finish the Cayo Perico heist.", function()
        menu.trigger_commands("scripthost")
        util.yield_once()
    
        SET_INT_LOCAL("fm_mission_controller_2020", 42279 + 1, 51338752)
        SET_INT_LOCAL("fm_mission_controller_2020", 42279 + 1375 + 1, 50)
    end)
    menu.action(meanings, "! = Risk", {""}, "", function()
    end, true)
    menu.action(meanings, "? = May/May not work.", {""}, "", function()
    menu.action(meanings, "B = Broken option.", {""}, "", function()
    end, true)
    end, true)
    menu.action(meanings, "WARN = Warning message.", {""}, "", function()
    end, true)
    menu.action(meanings, "Plugin = Addon options for the script.", {""}, "", function()
    end, true)

local end_time = util.current_time_millis()
local load_time = end_time - start_time

util.toast("Script loaded in " .. load_time .. "ms", TOAST_ALL)
